
			


				<!-- Grid row -->
				<div class="row">
					
					<!-- Flexible block scaffolding example -->
					<div class="span12">

						<!-- Grid row -->
						<div class="row">

							<!-- Data block -->
							<%= link_to new_invoice_path(:invoicetype => "Invoice"), :class => "span2 data-block widget-block" do %>
								<section>
									<span class="icon-file-new-alt"></span>
									<strong>Add invoice</strong>
								</section>
							<% end %>
							<!-- /Data block -->
							
							<!-- Data block -->
							<%= link_to new_invoice_path(:invoicetype => "Quote"), :class => "span2 data-block widget-block" do %>
								<section>
									<span class="icon-file-new-alt"></span>
									<strong>Add quote</strong>
								</section>
							<% end %>
							<!-- /Data block -->

							<!-- Data block -->
							<%= link_to new_customer_path, :class => "span2 data-block widget-block" do %>
								  		<section>
									<span class="icon-address-book-alt"></span>
									<strong>Add customer</strong>
								</section>
							<% end %>	
							<!-- /Data block -->


							<!-- Data block -->
							<article class="span12 data-block">
								<section>
									<div id="demo-1" class="flot"></div>
								</section>
								<footer>
									<p><span class="icon-idea"></span>  Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
								</footer>
							</article>
							<!-- /Data block -->

						</div>
						<!-- /Grid row -->

					</div>
					<!-- /Flexible block scaffolding example -->


				</div>
				<!-- /Grid row -->

				<div class="alert alert-error fade in">
					<button class="close" data-dismiss="alert">&times;</button >
					<strong>Error alert box!</strong> Nice red alert when something goes wrong.
				</div>

				<!-- Grid row -->
				<div class="row">
					


					<!-- Data block -->
					<article class="span12 turquoise data-block">
						<header>
							<h2><span class="icon-calendar"></span> Calendar</h2>
							<ul class="data-header-actions">
								<li class="demoTabs active"><a href="#calendar">Calendar</a></li>
								<li class="demoTabs"><a href="#table">Test results</a></li>
							</ul>
						</header>
						<section class="tab-content">

							<!-- Tab #calendar -->
							<div class="tab-pane active" id="calendar">

								<div class='full-calendar full-calendar-demo'></div>

							</div>
							<!-- /Tab #calendar -->
							
							<!-- Tab #table -->
							<div class="tab-pane" id="table">

								<table class="table table-stripped table-hover">
									<thead>
										<tr>
											<th>Nuclear test</th>
											<th>1<sup>st</sup> Yield (kT)</th>
											<th>2<sup>nd</sup> Yield (kT)</th>
											<th>Date</th>
										</tr>
									</thead>
									<tbody>
										<tr>
											<td>Trinity</td>
											<td>18-20</td>
											<td>19-21</td>
											<td>1945-07-16</td>
										</tr>
										<tr>
											<td>Trinity</td>
											<td>18-21</td>
											<td>16-18</td>
											<td>1945-07-19</td>
										</tr>
										<tr>
											<td>Little Boy</td>
											<td>12-18</td>
											<td>14-16</td>
											<td>1945-08-06</td>
										</tr>
										<tr>
											<td>Fat Man</td>
											<td>18-23</td>
											<td>21-24</td>
											<td>1945-08-09</td>
										</tr>
									</tbody>
								</table>

							</div>
							<!-- /Tab #table -->

						</section>
						<footer>
							<p>Morbi vitae luctus dolor. Aliquam ut enim a mi scelerisque porttitor ac at tortor.</p>
						</footer>
					</article>
					<!-- /Data block -->
					
				</div>
				<!-- /Grid row -->



		<!-- jQuery FullCalendar -->
		<%= javascript_include_tag "jquery.fullcalendar.min" %>
		
		<script>
			$(document).ready(function() {
			
				var date = new Date();
				var d = date.getDate();
				var m = date.getMonth();
				var y = date.getFullYear();
				$('.full-calendar-demo').fullCalendar({
					header: {
						left: 'today month,basicWeek',
						center: 'title',
						right: 'prev,next'
					},
					buttonText: {
						prev: '<span class="icon-chevron-left"></span>',
						next: '<span class="icon-chevron-right"></span>'
					},
					editable: true,
					events: [
						{
							title: 'All Day Event',
							start: new Date(y, m, 1)
						},
						{
							title: 'Long Event',
							start: new Date(y, m, d-5),
							end: new Date(y, m, d-2),
							className: 'event-red'
						},
						{
							id: 999,
							title: 'Repeating Event',
							start: new Date(y, m, d-3, 16, 0),
							allDay: false,
							className: 'event-blue'
						},
						{
							id: 999,
							title: 'Repeating Event',
							start: new Date(y, m, d+4, 16, 0),
							allDay: false,
							className: 'event-green'
						},
						{
							title: 'Meeting',
							start: new Date(y, m, d, 10, 30),
							allDay: false,
							className: 'event-orange'
						},
						{
							title: 'Lunch',
							start: new Date(y, m, d, 12, 0),
							end: new Date(y, m, d, 14, 0),
							allDay: false,
							className: 'event-purple'
						},
						{
							title: 'Birthday Party',
							start: new Date(y, m, d+1, 19, 0),
							end: new Date(y, m, d+1, 22, 30),
							allDay: false,
							className: 'event-turquoise'
						},
						{
							title: 'Walking Pixels website',
							start: new Date(y, m, 28),
							end: new Date(y, m, 29),
							url: 'http://www.walkingpixels.com/',
							className: 'event-dark'
						}
					]
				});
				
			});
		</script>

		<!-- jQuery Flot Charts -->
		<!--[if lte IE 8]>
			<script language="javascript" type="text/javascript" src="js/plugins/flot/excanvas.min.js"></script>
		<![endif]-->
		<script src="js/plugins/flot/jquery.flot.min.js"></script>
		<script src="js/plugins/flot/jquery.flot.resize.min.js"></script>
		
		<script>
			$(document).ready(function() {
				
				// Demo #1
				// we use an inline data source in the example, usually data would be fetched from a server
				var data = [], totalPoints = 300;
				function getRandomData() {
					if (data.length > 0)
						data = data.slice(1);
				
					// do a random walk
					while (data.length < totalPoints) {
						var prev = data.length > 0 ? data[data.length - 1] : 50;
						var y = prev + Math.random() * 10 - 5;
						if (y < 0)
							y = 0;
						if (y > 100)
							y = 100;
						data.push(y);
					}
				
					// zip the generated y values with the x values
					var res = [];
					for (var i = 0; i < data.length; ++i)
						res.push([i, data[i]])
					return res;
				}
				
				// setup control widget
				var updateInterval = 30;
				$("#updateInterval").val(updateInterval).change(function () {
					var v = $(this).val();
					if (v && !isNaN(+v)) {
						updateInterval = +v;
					if (updateInterval < 1)
						updateInterval = 1;
					if (updateInterval > 2000)
						updateInterval = 2000;
					$(this).val("" + updateInterval);
					}
				});
				
				// setup plot
				var options = {
					series: {
						shadowSize: 0,
						color: '#c0392b',
						lines: {
							fill: true
						}
					}, // drawing is faster without shadows
					yaxis: { min: 0, max: 100 },
					xaxis: { show: false },
					grid: { backgroundColor: '#ffffff', borderColor: 'transparent' },
				};
				var plot = $.plot($("#demo-1"), [ getRandomData() ], options);
				
				function update() {
					plot.setData([ getRandomData() ]);
					// since the axes don't change, we don't need to call plot.setupGrid()
					plot.draw();
					setTimeout(update, updateInterval);
				}
				
				update();
			
			});
		</script>
			
		